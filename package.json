{
  "name": "@orbit/concept",
  "version": "1.0.0",
  "description": "index",
  "main": "src/index.mjs",
  "private": true,
  "type": "module",
  "author": "Zababurin Sergey",
  "license": "Apache-2.0",
  "directories": {
    "doc": "/"
  },
  "config": {
    "env": "zb"
  },
  "scripts": {
    "dev": "parcel web/conceptnet_web/templates/index.html",
    "build": "parcel build src/index.mjs --bundle-node-modules --target node",
    "project:server_signal_dev": "yarn workspace @orbit/signal dev",
    "bundle:star_start": "yarn workspace @bundle/star start",
    "bundle:star_initiator_dev": "yarn workspace @bundle/star dev:initiator",
    "bundle:star_dialer_dev": "yarn workspace @bundle/star dev:dialer",
    "bundle:star": "npm-run-all -c -p bundle:star_initiator bundle:star_dialer",
    "bundle:star_initiator_build": "npm-run-all -c -p bundle:star_initiator_kill bundle:star_initiator_dev",
    "bundle:star_dialer_build": "npm-run-all -c -p bundle:star_dialer_kill bundle:star_dialer_dev",
    "admin:dev": "yarn workspace @orbit/admin docs:dev",
    "admin:build": "yarn workspace @orbit/admin build",
    "admin:deploy": "yarn workspace @orbit/admin deploy",
    "bundle:star_initiator_kill": "kill $(lsof -t -i:1928)",
    "bundle:star_dialer_kill": "kill $(lsof -t -i:1937)",
    "conda:intall": "./conda.sh",
    "conda:create": "conda create --name $npm_package_config_env python=3",
    "conda:activate": "conda activate $npm_package_config_env",
    "conda:deactivate": "conda deactivate",
    "conda:info": "conda info --envs",
    "conda:install_numpy": "conda install --name $npm_package_config_env numpy",
    "orbit:signal": "yarn workspace @orbit/signal start",
    "zcash:test": "node packages/rpc.mjs",
    "go:env": "go env",
    "go:admin": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/admin",
    "go:manifest": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/manifest",
    "go:design": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/design",
    "go:ip-address": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/ip-address",
    "go:parse-bem": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/parse-bem-identifier",
    "go:Deep-Learning-course": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/Deep-Learning-course",
    "go:Deep-Learning": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/Visualizing-Deep-Learning",
    "go:Contract-Deals": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/contract-deals",
    "go:neural-networks": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/neural-networks-and-deep-learning",
    "go:DeepLearningPython": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/DeepLearningPython",
    "go:get_relay": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/server-signal",
    "go:get_server": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/zababurinsv.github.io",
    "go:get_docs": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/docs",
    "go:get_static": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/static",
    "go:db-control-center": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/db-control-center",
    "go:idbfs": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/wasm",
    "git:clone_docs": "git clone https://github.com/zababurinsv/docs.git ./projects/io",
    "grpc:server": "npm-run-all -c kill:8234 server:grpcServer",
    "grpc:client": "node server__grpc_client.mjs",
    "grpc:proxy": "envoy -c server__grpc_proxy_conf.yaml",
    "orbit:core_push": "yarn workspace @orbit/core run push",
    "orbit:core_pull": "yarn workspace @orbit/core run pull",
    "orbit:ipfs_build": "yarn workspace @orbit/ipfs-http-clien run build",
    "orbit:orbit-db_build": "yarn workspace @orbit/orbit-db run build",
    "orbit:bundle_start": "yarn workspace @orbit/bundle run start",
    "orbit:bundle_build": "yarn workspace @orbit/bundle run build:mjs",
    "orbit:examples": "yarn workspace @orbit/db run examples",
    "kill:8234": "kill $(lsof -t -i:8234)",
    "server:grpcServer": "nodemon server__grpc_server.mjs",
    "build-renderer": "cross-env HOT=1 && NODE_ENV=production  webpack --config ./configs/webpack.config.renderer.babel.js",
    "gulp": "gulp",
    "kill": "kill $(lsof -t -i:8010)",
    "hosts": "sudo nano /etc/hosts",
    "nginx:conf": "cd /etc/nginx &&  sudo nano nginx.conf",
    "nginx:verify": "sudo nginx -t",
    "nginx:restart": "sudo systemctl restart nginx",
    "nginx:btc": "sudo nano /etc/nginx/sites-available/btc.api.openbazaar.org",
    "nginx:ltc": "sudo nano /etc/nginx/sites-available/ltc.api.openbazaar.org",
    "nginx:zec": "sudo nano /etc/nginx/sites-available/zec.api.openbazaar.org",
    "nginx:bch": "sudo nano /etc/nginx/sites-available/bch.api.openbazaar.org",
    "nginx:news": "sudo nano /etc/nginx/sites-available/web3.news",
    "nginx:snippets_btc": "sudo nano /etc/nginx/snippets/btc.api.openbazaar.org.conf",
    "nginx:snippets_ltc": "sudo nano /etc/nginx/snippets/ltc.api.openbazaar.org.conf",
    "nginx:snippets_zec": "sudo nano /etc/nginx/snippets/zec.api.openbazaar.org.conf",
    "nginx:snippets_bch": "sudo nano /etc/nginx/snippets/bch.api.openbazaar.org.conf",
    "nginx:snippets_news": "sudo nano /etc/nginx/snippets/web3.news.conf",
    "zcash:log_web3.news": "tail -f /var/log/nginx/web3.news.error.log",
    "zcash:log": "tail -f ~/.zcash/debug.log",
    "zcash:conf": "sudo nano ~/.zcash/zcash.conf",
    "zcash:run": "~/zcash/src/zcashd",
    "zcash:stop": "~/zcash/src/zcash-cli stop",
    "zcash:getaddressbalance": "curl --user zb:f4xV6MeOOQ3qNGYTewOA8fuTRI/5ir6gCFnG0MGxNE8= --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressbalance\", \"params\": [{\"addresses\": [\"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:8232/",
    "zcash:getaddressdeltas": "curl --user zb:f4xV6MeOOQ3qNGYTewOA8fuTRI/5ir6gCFnG0MGxNE8= --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressdeltas\", \"params\": [{\"addresses\": [\"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"], \"start\": 1000, \"end\": 2000, \"chainInfo\": true}] }' -H 'content-type: text/plain;' http://127.0.0.1:8232/",
    "zcash:getaccount": "/home/zb/zcash/src/zcash-cli getaccount \"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"",
    "zcash:getinfo": "/home/zb/zcash/src/zcash-cli getinfo",
    "zcash:getbestblockhash": "/home/zb/zcash/src/zcash-cli getbestblockhash",
    "zcash:getunconfirmedbalance": "/home/zb/zcash/src/zcash-cli getunconfirmedbalance",
    "zcash:getbalance": "/home/zb/zcash/src/zcash-cli getbalance \"*\" 6",
    "zcash:z_getbalance": "/home/zb/zcash/src/zcash-cli z_getbalance \"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"",
    "zcash:getaddressmempool": "/home/zb/zcash/src/zcash-cli getaddressmempool '{\"addresses\": [\"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"]}'",
    "zcash:help": "/home/zb/zcash/src/zcash-cli help",
    "zcash:gettransaction --true": "/home/zb/zcash/src/zcash-cli gettransaction 1349766ffe6d786d7f9c7e3fc7780b66a09fd74eb69c05bd2e760b1924e70b18 true",
    "zcash:gettransaction --false": "/home/zb/zcash/src/zcash-cli gettransaction 1349766ffe6d786d7f9c7e3fc7780b66a09fd74eb69c05bd2e760b1924e70b18 false",
    "wasm:docker_test": "sudo docker run --rm -v $(pwd):/src -u $(id -u):$(id -g) emscripten/emsdk emcc helloworld.cpp -o helloworld.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zababurinsv/zababurinsv.github.ob.git"
  },
  "keywords": [
    "repository"
  ],
  "bugs": {
    "url": "https://github.com/zababurinsv/zababurinsv.github.ob/issues"
  },
  "homepage": "https://zababurinsv.github.ob/",
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "maintainers": [],
  "workspaces": [
    "bundle/star"
  ],
  "dependencies": {
    "es-module-lexer": "^0.9.0",
    "parcel-plugin-static-files-copy": "^2.6.0"
  },
  "devDependencies": {
    "@parcel/resolver-default": "^2.0.0-alpha.3",
    "parcel": "2.0.0-rc.0"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.3",
    "utf-8-validate": "^5.0.5"
  }
}
