{
  "name": "@orbit/api",
  "version": "1.0.0",
  "description": "index",
  "main": "src/index.mjs",
  "private": true,
  "directories": {
    "doc": "/"
  },
  "config": {
    "env": "zb"
  },
  "scripts": {
    "start": "parcel src/index.mjs --target node",
    "build": "parcel build src/index.mjs --target node",
    "project:server_signal_dev": "yarn workspace @orbit/signal dev",
    "bundle:star_start": "yarn workspace @bundle/star start",
    "bundle:star_initiator_dev": "yarn workspace @bundle/star dev:initiator",
    "bundle:star_dialer_dev": "yarn workspace @bundle/star dev:dialer",
    "bundle:star": "npm-run-all -c -p bundle:star_initiator bundle:star_dialer",
    "bundle:star_initiator_build": "npm-run-all -c -p bundle:star_initiator_kill bundle:star_initiator_dev",
    "bundle:star_dialer_build": "npm-run-all -c -p bundle:star_dialer_kill bundle:star_dialer_dev",
    "admin:dev": "yarn workspace @orbit/admin docs:dev",
    "admin:build": "yarn workspace @orbit/admin build",
    "admin:deploy": "yarn workspace @orbit/admin deploy",
    "bundle:star_initiator_kill": "kill $(lsof -t -i:1928)",
    "bundle:star_dialer_kill": "kill $(lsof -t -i:1937)",
    "conda:intall": "./conda.sh",
    "conda:create": "conda create --name $npm_package_config_env python=3",
    "conda:activate": "conda activate $npm_package_config_env",
    "conda:deactivate": "conda deactivate",
    "conda:info": "conda info --envs",
    "conda:install_numpy": "conda install --name $npm_package_config_env numpy",
    "orbit:signal": "yarn workspace @orbit/signal start",
    "zcash:test": "node packages/rpc.mjs",
    "go:env": "go env",
    "go:admin": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/admin",
    "go:manifest": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/manifest",
    "go:design": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/design",
    "go:ip-address": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/ip-address",
    "go:parse-bem": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/parse-bem-identifier",
    "go:Deep-Learning-course": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/Deep-Learning-course",
    "go:Deep-Learning": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/Visualizing-Deep-Learning",
    "go:Contract-Deals": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/contract-deals",
    "go:neural-networks": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/neural-networks-and-deep-learning",
    "go:DeepLearningPython": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/DeepLearningPython",
    "go:get_relay": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/server-signal",
    "go:get_server": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/zababurinsv.github.io",
    "go:get_docs": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/docs",
    "go:get_static": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/static",
    "go:db-control-center": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/db-control-center",
    "go:idbfs": "export GOPATH=$(pwd)/projects && go get github.com/zababurinsv/wasm",
    "git:clone_docs": "git clone https://github.com/zababurinsv/docs.git ./projects/io",
    "dev": "npm-run-all -c build-renderer gulp",
    "grpc:server": "npm-run-all -c kill:8234 server:grpcServer",
    "grpc:client": "node server__grpc_client.mjs",
    "grpc:proxy": "envoy -c server__grpc_proxy_conf.yaml",
    "orbit:core_push": "yarn workspace @orbit/core run push",
    "orbit:core_pull": "yarn workspace @orbit/core run pull",
    "orbit:ipfs_build": "yarn workspace @orbit/ipfs-http-clien run build",
    "orbit:orbit-db_build": "yarn workspace @orbit/orbit-db run build",
    "orbit:bundle_start": "yarn workspace @orbit/bundle run start",
    "orbit:bundle_build": "yarn workspace @orbit/bundle run build:mjs",
    "orbit:examples": "yarn workspace @orbit/db run examples",
    "kill:8234": "kill $(lsof -t -i:8234)",
    "server:grpcServer": "nodemon server__grpc_server.mjs",
    "build-renderer": "cross-env HOT=1 && NODE_ENV=production  webpack --config ./configs/webpack.config.renderer.babel.js",
    "gulp": "gulp",
    "kill": "kill $(lsof -t -i:8010)",
    "hosts": "sudo nano /etc/hosts",
    "nginx:conf": "cd /etc/nginx &&  sudo nano nginx.conf",
    "nginx:verify": "sudo nginx -t",
    "nginx:restart": "sudo systemctl restart nginx",
    "nginx:btc": "sudo nano /etc/nginx/sites-available/btc.api.openbazaar.org",
    "nginx:ltc": "sudo nano /etc/nginx/sites-available/ltc.api.openbazaar.org",
    "nginx:zec": "sudo nano /etc/nginx/sites-available/zec.api.openbazaar.org",
    "nginx:bch": "sudo nano /etc/nginx/sites-available/bch.api.openbazaar.org",
    "nginx:news": "sudo nano /etc/nginx/sites-available/web3.news",
    "nginx:snippets_btc": "sudo nano /etc/nginx/snippets/btc.api.openbazaar.org.conf",
    "nginx:snippets_ltc": "sudo nano /etc/nginx/snippets/ltc.api.openbazaar.org.conf",
    "nginx:snippets_zec": "sudo nano /etc/nginx/snippets/zec.api.openbazaar.org.conf",
    "nginx:snippets_bch": "sudo nano /etc/nginx/snippets/bch.api.openbazaar.org.conf",
    "nginx:snippets_news": "sudo nano /etc/nginx/snippets/web3.news.conf",
    "zcash:log_web3.news": "tail -f /var/log/nginx/web3.news.error.log",
    "zcash:log": "tail -f ~/.zcash/debug.log",
    "zcash:conf": "sudo nano ~/.zcash/zcash.conf",
    "zcash:run": "~/zcash/src/zcashd",
    "zcash:stop": "~/zcash/src/zcash-cli stop",
    "zcash:getaddressbalance": "curl --user zb:f4xV6MeOOQ3qNGYTewOA8fuTRI/5ir6gCFnG0MGxNE8= --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressbalance\", \"params\": [{\"addresses\": [\"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:8232/",
    "zcash:getaddressdeltas": "curl --user zb:f4xV6MeOOQ3qNGYTewOA8fuTRI/5ir6gCFnG0MGxNE8= --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressdeltas\", \"params\": [{\"addresses\": [\"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"], \"start\": 1000, \"end\": 2000, \"chainInfo\": true}] }' -H 'content-type: text/plain;' http://127.0.0.1:8232/",
    "zcash:getaccount": "/home/zb/zcash/src/zcash-cli getaccount \"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"",
    "zcash:getinfo": "/home/zb/zcash/src/zcash-cli getinfo",
    "zcash:getbestblockhash": "/home/zb/zcash/src/zcash-cli getbestblockhash",
    "zcash:getunconfirmedbalance": "/home/zb/zcash/src/zcash-cli getunconfirmedbalance",
    "zcash:getbalance": "/home/zb/zcash/src/zcash-cli getbalance \"*\" 6",
    "zcash:z_getbalance": "/home/zb/zcash/src/zcash-cli z_getbalance \"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"",
    "zcash:getaddressmempool": "/home/zb/zcash/src/zcash-cli getaddressmempool '{\"addresses\": [\"t1gyJeWownZrpstwETf9R7GYSsQGUs93X7r\"]}'",
    "zcash:help": "/home/zb/zcash/src/zcash-cli help",
    "zcash:gettransaction --true": "/home/zb/zcash/src/zcash-cli gettransaction 1349766ffe6d786d7f9c7e3fc7780b66a09fd74eb69c05bd2e760b1924e70b18 true",
    "zcash:gettransaction --false": "/home/zb/zcash/src/zcash-cli gettransaction 1349766ffe6d786d7f9c7e3fc7780b66a09fd74eb69c05bd2e760b1924e70b18 false",
    "wasm:docker_test": "sudo docker run --rm -v $(pwd):/src -u $(id -u):$(id -g) emscripten/emsdk emcc helloworld.cpp -o helloworld.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/zababurinsv/zababurinsv.github.ob.git"
  },
  "keywords": [
    "repository"
  ],
  "type": "module",
  "author": "Zababurin Sergey",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/zababurinsv/zababurinsv.github.ob/issues"
  },
  "homepage": "https://zababurinsv.github.ob/",
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "maintainers": [ ],
  "workspaces": [
    "bundle/star"
  ],
  "eslintConfig": {
    "extends": "react-app"
  },
  "lint-staged": {
    "*.{js,jsx}": [
      "cross-env NODE_ENV=development eslint --cache --format=pretty",
      "git add"
    ],
    "{*.json,.{babelrc,eslintrc,prettierrc,stylelintrc}}": [
      "prettier --ignore-path .eslintignore --parser json --write",
      "git add"
    ],
    "*.{css,scss}": [
      "stylelint --ignore-path .eslintignore --syntax scss --fix",
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ],
    "*.{html,md,yml}": [
      "prettier --ignore-path .eslintignore --single-quote --write",
      "git add"
    ]
  },
  "jest": {
    "testURL": "http://localhost/",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/internals/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "js",
      "jsx",
      "mjs",
      "json"
    ],
    "moduleDirectories": [
      "node_modules",
      "app/node_modules"
    ],
    "transform": {
      "^.+\\.jsx?$": "babel-jest"
    },
    "setupFiles": [
      "./internals/scripts/CheckBuildsExist.js"
    ]
  },
  "dependencies": { },
  "devDependencies": {
    "@babel/core": "^7.15.5",
    "@babel/plugin-proposal-class-properties": "^7.14.5",
    "@babel/plugin-proposal-decorators": "^7.15.4",
    "@babel/plugin-proposal-do-expressions": "^7.14.5",
    "@babel/plugin-proposal-export-default-from": "^7.14.5",
    "@babel/plugin-proposal-export-namespace-from": "^7.14.5",
    "@babel/plugin-proposal-function-bind": "^7.14.5",
    "@babel/plugin-proposal-function-sent": "^7.14.5",
    "@babel/plugin-proposal-json-strings": "^7.14.5",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.14.5",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.14.5",
    "@babel/plugin-proposal-numeric-separator": "^7.14.5",
    "@babel/plugin-proposal-optional-chaining": "^7.14.5",
    "@babel/plugin-proposal-pipeline-operator": "^7.15.0",
    "@babel/plugin-proposal-throw-expressions": "^7.14.5",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.10.4",
    "@babel/plugin-transform-react-constant-elements": "^7.14.5",
    "@babel/plugin-transform-react-inline-elements": "^7.14.5",
    "@babel/preset-env": "^7.15.6",
    "@babel/preset-flow": "^7.14.5",
    "@babel/preset-react": "^7.14.5",
    "@babel/register": "^7.15.3",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^27.2.0",
    "babel-loader": "^8.2.2",
    "babel-plugin-dev-expression": "^0.2.2",
    "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
    "chalk": "^4.1.2",
    "concurrently": "^6.2.1",
    "cross-env": "^7.0.3",
    "cross-spawn": "^7.0.3",
    "css-loader": "^6.2.0",
    "detect-port": "^1.3.0",
    "electron": "14.0.1",
    "electron-builder": "^22.11.7",
    "electron-devtools-installer": "^3.2.0",
    "electron-notarize": "^1.1.1",
    "electron-rebuild": "^3.2.3",
    "enzyme": "^3.11.0",
    "enzyme-adapter-react-16": "^1.15.6",
    "enzyme-to-json": "^3.6.2",
    "eslint": "^7.32.0",
    "eslint-config-airbnb": "^18.2.1",
    "eslint-config-airbnb-typescript": "^14.0.0",
    "eslint-config-erb": "^4.0.3",
    "eslint-config-prettier": "^8.3.0",
    "eslint-formatter-pretty": "^4.1.0",
    "eslint-import-resolver-webpack": "^0.13.1",
    "eslint-plugin-compat": "^3.13.0",
    "eslint-plugin-flowtype": "^6.0.1",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-jest": "^24.4.2",
    "eslint-plugin-jsx-a11y": "6.4.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-promise": "^5.1.0",
    "eslint-plugin-react": "^7.25.2",
    "eslint-plugin-testcafe": "^0.2.1",
    "fbjs-scripts": "^3.0.0",
    "file-loader": "^6.2.0",
    "flow-bin": "^0.160.0",
    "flow-runtime": "^0.17.0",
    "flow-typed": "^3.3.1",
    "gulp": "^4.0.2",
    "husky": "^7.0.2",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^27.2.0",
    "jsonld-signatures": "^9.3.0",
    "lint-staged": "^11.1.2",
    "mini-css-extract-plugin": "^2.3.0",
    "opencollective-postinstall": "^2.0.3",
    "optimize-css-assets-webpack-plugin": "^6.0.1",
    "parcel": "^2.0.0-rc.0",
    "parcel-bundler": "^1.10.3",
    "prettier": "^2.4.1",
    "react-hot-loader": "^4.13.0",
    "react-test-renderer": "^17.0.2",
    "redux-logger": "^3.0.6",
    "rimraf": "^3.0.2",
    "sass-loader": "^12.1.0",
    "sinon": "^11.1.2",
    "spectron": "^15.0.0",
    "style-loader": "^3.2.1",
    "stylelint": "^13.13.1",
    "stylelint-config-prettier": "^8.0.2",
    "stylelint-config-standard": "^22.0.0",
    "terser-webpack-plugin": "^5.2.4",
    "url-loader": "^4.1.1",
    "webpack": "^5.53.0",
    "webpack-bundle-analyzer": "^4.4.2",
    "webpack-cli": "^4.8.0",
    "webpack-dev-server": "^4.2.1",
    "webpack-merge": "^5.8.0",
    "yarn": "^1.22.11"
  },
  "nodemonConfig": {
    "ignore": [
      "test/*",
      "node_modules/*",
      "docs/*",
      "io/*",
      "/home/sergey/PhpstormProjects/system/ln",
      "Documents/*",
      "Downloads/*",
      "outbox/*",
      "data/*",
      "bundle/*",
      "datastore/*",
      "logs/*",
      "datastore/*",
      "blocks/*",
      "root/*"
    ]
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.3",
    "utf-8-validate": "^5.0.5"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }
}
